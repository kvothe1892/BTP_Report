New plan

CH 1 : Introduction
	Sec 1 : KMeans Problem
		1.1 : Problem definition
		1.2 : Uses
		1.3 : Existing Heuristics and algorithms
	Sec 2 : Approximate Solutions
		2.1 : Need for approximation
		2.2 : Exisiting algorithms and heuristics (with running time)
		2.3 : Algorithms considered in this
			2.3.1 : KSS
			2.3.2 : D2 sampling
	Sec 3 : Parallel Programming
		2.1 : Why parallel. Why the machine.
		2.2 : Intro to ICC and intel arhitecture
		2.3 : Compiler directives
	Sec 4 : Our work in simple, concise terms

CH 2 : Pre-reqs
	Sec 1 : KMeans Theoretical Algorithms and analysis in detail
		1.1 : KSS
		1.2 : D2 sampling
		1.3 : Ackermann's work
	Sec 2 : Implementation details
		2.1 : Machine
			2.2.1 : Specs
			2.2.2 : Installation and setup
		2.2 : ICC specifications in detail
	Sec 3 : Hybrid algorithms in the implementation
		2.1 : Parallel ptas
		2.2 : LLoyd's
		2.3 : Hybrid
			2.3.1 : Hierarchical ptas
			2.3.2 : Heirarchical Lloyds
			2.3.3 : Kmeans++
	Sec 4 : Datasets, layout



CH 3 : Theoretical work
	Sec 1 : Our paper

CH 4 : Code and details

Ch 5 Results and Conclusion
	Sec 1 : Data
	Sec 2 : Graphs





















-------------------------------------------------------------------------
Currently this is the plan that I have

Abstract
Introduction			--not sure how the sections should be
	(What is kmeans - colloquial, Where is it used)
	(Parallelization, Why parallelize?)
	(Our project basic intro. Papers read, Name and few lines on algorithms we used, Hardware features we used. Programming fundamentals involved)
	(-- Anything else you think would be relevant)

Chapter1 : K Means Clustering Problem
	*Definition, popular works
	*Approximation (why approximation. algorithms. bounds)
	*Sampling based approaches
		**KSS (with algo)
		**D2 sampling (with algo)
	*Analysis of sampling based approaches
		**Ackerman
	*Our analysis and Improvement
	*Theoretical results and conclusions

Chapter2 : Parallel Implemention
	*Need for parallelization
	*Basics of intel parallel architecture
	*Parallel programming imperatives

		--Can also make above 3 part of the same section

	*Parallel version of algo (and some comments)

	-- Some more sections involving the remaining code description and data

Results

-------------------------------------------------------------------------------------
Legend
--	Notes/Comment
() 	Content
*/**	Section/Subsection
-------------------------------------------------------------------------------------
Rough draft, we can update it as we go on.































